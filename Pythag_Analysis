## Home Teams game results since 2015
home_2015_on<- new_Df %>%
  filter(between(season,2015,2022),game_type=='REG') %>%
  select(season,game_id,week,home_team,home_score,location,result) %>%
  rename(team=home_team,points_for=home_score)


## Away Teams game results since 2015
away_2015_on<- new_Df %>%
  filter(between(season,2015,2022),game_type=='REG') %>%
  select(season,game_id,week,away_team,away_score,location,result) %>%
  mutate(result=-result,location=case_when(location=='Neutral'~'Neutral',TRUE ~'Away')) %>%
  rename(team=away_team,points_for=away_score)

#Bringing together both data frames. Updating teams that have moved locations since
all_Games_2015_on <- bind_rows(home_2015_on,away_2015_on) %>%
  mutate(points_allowed=points_for-result,
           team = case_when(
             team == 'OAK' ~ 'LV',
             team == 'SD' ~ 'LAC',
             team == 'STL' ~ 'LA',
             TRUE ~ team))%>%
  arrange(week,game_id)

game_summaries<- all_Games_2015_on %>%
  mutate(win = case_when(result > 0 ~ 1, result < 0 ~ 0, result == 0 ~ 0.5),
         one_score_game= if_else(abs(result)<=8,1,0),
         fg_game= if_else(abs(result)<=3,1,0),
         one_score_win=if_else(win==1 & one_score_game==1,1,0),
         fg_Win=if_else(win==1 & fg_game==1,1,0),
         double_digit_win=if_else(result>=10,1,0),
         double_digit_loss=if_else(result<=-10,1,0)) %>%
  group_by(team,season) %>%
  summarise(wins=sum(win),
            points_for=sum(points_for),
            points_allowed=sum(points_allowed),
            point_diff=sum(result),
            one_score_games=sum(one_score_game),
            one_score_wins=sum(one_score_win),
            fg_games=sum(fg_game),
            fg_wins=sum(fg_Win),
            double_digit_wins=sum(double_digit_win),
            double_digit_losses=sum(double_digit_loss)) %>%
  mutate(scoring_ratio=round(points_for/points_allowed,2),
         pred_win_pct=round((scoring_ratio^2.37)/((scoring_ratio^2.37)+1),2),
         pythag_wins=round(pred_win_pct*17,2),
         pythag_difference=pythag_wins-wins) %>%
  mutate(prior_year_wins=lag(wins),
         py_point_diff=lag(point_diff),
         py_one_score_wins=lag(one_score_wins),
         py_one_score_games=lag(one_score_games),
         py_double_digit_wins=lag(double_digit_wins),
         py_double_digit_losses=lag(double_digit_losses),
         py_pythag_wins=lag(pythag_wins),
         py_pythag_difference=lag(pythag_difference)
         ) %>%
    ungroup()


## Over-achieving teams
game_summaries %>%
  select(team,season,wins, one_score_wins,one_score_games,
         prior_year_wins,py_pythag_wins,py_pythag_difference,pythag_difference,py_one_score_wins,py_one_score_games) %>%
  mutate(win_change=wins-prior_year_wins,
         win_diff=case_when(win_change >0 ~ 'Increase', win_change <0 ~ 'Decrease', TRUE ~ 'No Change')) %>%
  filter(py_pythag_difference<=-1) %>%
  # view()
  group_by(win_diff) %>%
    summarise(count=n(),
              avg_Change=mean(win_change),
              ) %>%
  mutate(pct_total = (count / sum(count)) * 100)
    
  
## Under-achieving teams
game_summaries %>%
  select(team,season,wins,prior_year_wins,py_pythag_wins,py_pythag_difference,py_one_score_wins) %>%
  mutate(win_change=wins-prior_year_wins,
         win_diff=case_when(win_change >0 ~ 'Increase', win_change <0 ~ 'Decrease', TRUE ~ 'No Change'))%>%
  filter(py_pythag_difference>=1) %>%
  # view()
  group_by(win_diff) %>%
  summarise(count=n(),
            avg_Change=mean(win_change),
            one_Score=mean(py_one_score_wins))%>%
  mutate(pct_total = (count / sum(count)) * 100)

#2022 season
game_summaries %>%
  filter(season==2022) %>%
  select(team,season,wins,prior_year_wins,py_pythag_difference,
         pythag_difference,one_score_games,one_score_wins,fg_games,fg_wins,points_for,points_allowed,point_diff,double_digit_wins,double_digit_losses) %>%
  arrange(pythag_difference) %>%
  view()
  
  
## Double-digit wins
game_summaries %>%
  group_by(py_double_digit_wins)%>%
  filter(!is.na(py_double_digit_wins))%>% ## drop 2015 results as no PY
  summarise(count=n(),
            py_wins=round(mean(prior_year_wins)),
            fy_wins=round(mean(wins),2),
            median(wins)) %>%
  ggplot(aes(x = py_double_digit_wins, y = fy_wins))+
  geom_hline(yintercept = mean(game_summaries$wins), color = "red",linetype="dashed") +
  geom_vline(xintercept =  mean(game_summaries$double_digit_wins), color = "red", linetype = "dashed")+
  stat_smooth(geom='line', alpha=0.5, se=FALSE, method='lm')+
  # geom_text_repel(aes(label=round(fy_wins,2))) +
  theme_bw()+
  geom_point(cex=mean(game_summaries$wins)/3,alpha=.7)

# # Pythag Difference bottom 10
game_summaries_logos %>%
  filter(season == 2022) %>%
  arrange(pythag_difference) %>%
  head(10) %>%
  ggplot(aes(x=reorder(team,-pythag_difference),y=pythag_difference,fill=pythag_difference)) +
  geom_bar(stat="identity") +
  scale_fill_gradient(low = "darkred", high = "red") +
  labs(x = "Team", y = "Pythag_Difference",
       title = "Overachieving Teams by Pythag. Expectation",
       caption = "Data: @nflfastR")+
  geom_nfl_logos(aes(team_abbr = team), alpha = 0.7,width=.05) +
  # geom_hline(yintercept = mean(game_summaries_logos$pythag_difference), color = "red", linetype = "dashed", alpha=0.5)
  #uses the black and white ggplot theme
  theme_bw() +
  #center title with hjust = 0.5
  theme(
    plot.title = element_text(size = 8, hjust = 0.5, face = "bold.italic"))
    
    
# # Pythag Difference top 10
    game_summaries_logos %>%
      filter(season == 2022) %>%
      arrange(-pythag_difference) %>%
      head(10) %>%
      ggplot(aes(x=reorder(team,pythag_difference),y=pythag_difference,fill=pythag_difference)) +
      geom_bar(stat="identity") +
      scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
      labs(x = "Team", y = "Pythag_Difference",
          title = "Underachieving Teams by Pythag. Expectation",
                caption = "Data: @nflfastR")+
      geom_nfl_logos(aes(team_abbr = team), alpha = 0.7,width=.05) +
      # geom_hline(yintercept = mean(game_summaries_logos$pythag_difference), color = "red", linetype = "dashed", alpha=0.5)
    #uses the black and white ggplot theme
    theme_bw() +
      #center title with hjust = 0.5
      theme(
        plot.title = element_text(size = 8, hjust = 0.5, face = "bold.italic")) 
